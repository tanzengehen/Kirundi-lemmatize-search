# Translations template for PROJECT.
# Copyright (C) 2024 ORGANIZATION
# This file is distributed under the same license as the PROJECT project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PROJECT VERSION\n"
"Report-Msgid-Bugs-To: EMAIL@ADDRESS\n"
"POT-Creation-Date: 2024-01-07 21:49+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"

#: lemmatize_search/kir_helper2.py:218
msgid ""
"Sorry, I didn't save the list that starts with:\n"
"    {}\n"
"I was expecting only str, int, tuple or list as list elements."
msgstr ""

#: lemmatize_search/kir_prepare_verbs.py:135
msgid "lemma has no stem in database: ID {}"
msgstr ""

#: lemmatize_search/kir_prepare_verbs.py:584
msgid "{}: perfective? -{}"
msgstr ""

#: lemmatize_search/kir_prepare_verbs.py:641
msgid ""
"\n"
"\t\ttried to add passiv to\n"
"perfective but unknown letter before y"
msgstr ""

#: lemmatize_search/kir_prepare_verbs.py:888
msgid ""
"Attention: filter proverbs out doesn't work with '{}'. Check also its "
"alternatives in the database."
msgstr ""

#: lemmatize_search/kir_prepare_verbs.py:921
msgid "filter passiv out doesn't work': {}"
msgstr ""

#: lemmatize_search/kir_start_input_console.py:39
msgid "txt or csv file or 'q' for 'quit'"
msgstr ""

#: lemmatize_search/kir_start_input_console.py:42
msgid ""
"This file doesn't exist. {}\n"
"Try again"
msgstr ""

#: lemmatize_search/kir_start_input_console.py:59
msgid "please give me a searchterm"
msgstr ""

#: lemmatize_search/kir_start_input_console.py:65
msgid ""
"'*' only for words, not for letters.\n"
"Write searchterm again please"
msgstr ""

#: lemmatize_search/kir_start_input_console.py:88
msgid "all except "
msgstr ""

#: lemmatize_search/kir_start_input_console.py:95
msgid "(exact) + "
msgstr ""

#: lemmatize_search/kir_start_input_console.py:99
msgid "anything + "
msgstr ""

#: lemmatize_search/kir_start_input_console.py:133
msgid ""
"\n"
"Select the Rundi text you want to inspect."
msgstr ""

#: lemmatize_search/kir_start_input_console.py:137
msgid "Prefer the tagged file, if there is one already: 'tag__file.csv'"
msgstr ""

#: lemmatize_search/kir_start_input_console.py:140 lemmatize_search/qt.py:164
msgid "path/to/file"
msgstr ""

#: lemmatize_search/kir_start_input_console.py:155
msgid ""
"\n"
"What are you looking for?\n"
"    Divide searchterms with space characters.\n"
"    You can put a '!' before a !word or !tag, if you want to exclude it.\n"
"    You can place a separate '*' to set one token as wildcard.\n"
"    You can place a '/' before a /word, if you want to find exact this "
"word,\n"
"    else the word will be taken as a lemma and all wordforms will be "
"found.\n"
"\n"
"    You can use these tags:\n"
"        [ADJ, ADV, CONJ, EMAIL, F(foreign word), INTJ, NI, NOUN,\n"
"        NUM, NUM_ROM (roman number), PRON (pronouns), PROPN,\n"
"        PROPN_CUR, PROPN_LOC (geographical place),\n"
"        PROPN_NAM (personal name), PROPN_ORG,\n"
"        PROPN_PER (group of persons), PROPN_REL, PROPN_SCI,\n"
"        PROPN_THG, PROPN_VEG, PRP (prepositions), SYMBOL,\n"
"        UNK (unkwon to dictionary), VERB, WWW (webaddress)]\n"
"Now enter our search term"
msgstr ""

#: lemmatize_search/kir_start_input_console.py:185
msgid "\tOK, you are looking for a {}-gram.\n"
msgstr ""

#: lemmatize_search/kir_tag_search.py:45
msgid "sorting Named Entities ..........................."
msgstr ""

#: lemmatize_search/kir_tag_search.py:51
msgid ""
"\n"
"Named Entities      : "
msgstr ""

#: lemmatize_search/kir_tag_search.py:58
msgid "adverbs etc         : "
msgstr ""

#: lemmatize_search/kir_tag_search.py:66
msgid "pronouns            : "
msgstr ""

#: lemmatize_search/kir_tag_search.py:72
msgid "sorting nouns ...................................."
msgstr ""

#: lemmatize_search/kir_tag_search.py:77
msgid ""
"\n"
"nouns               : "
msgstr ""

#: lemmatize_search/kir_tag_search.py:85
msgid "adjektives          : "
msgstr ""

#: lemmatize_search/kir_tag_search.py:90
msgid "sorting verbs ...................................."
msgstr ""

#: lemmatize_search/kir_tag_search.py:95
msgid ""
"\n"
"verbs               : "
msgstr ""

#: lemmatize_search/kir_tag_search.py:105
msgid ""
"\n"
"exclamations        : "
msgstr ""

#: lemmatize_search/kir_tag_search.py:122
msgid ""
"\n"
"Vocabulary\n"
"characters         : {nchar:12}\n"
"tokens             : {ntokens:12}\n"
"types              : {ntypes:12} "
msgstr ""

#: lemmatize_search/kir_tag_search.py:281
msgid ""
"\n"
"tagging text, this may take some moments ........."
msgstr ""

#: lemmatize_search/kir_tag_search.py:333
#, python-format
msgid ""
"\n"
"unknown types      : {:12} ({}% incl. broken words, mistakes, ...)"
msgstr ""

#: lemmatize_search/kir_tag_search.py:337
msgid "recognized lemmata : {:12}"
msgstr ""

#: lemmatize_search/kir_tag_search.py:526
msgid "Error: missing tag"
msgstr ""

#: lemmatize_search/kir_tag_search.py:569
#: lemmatize_search/kir_tag_search.py:631
msgid ""
"\n"
"\n"
"All tagged files saved in: \n"
msgstr ""

#: lemmatize_search/kir_tag_search.py:572
#: lemmatize_search/kir_tag_search.py:633
msgid ""
"\n"
"We can use them again later."
msgstr ""

#: lemmatize_search/kir_tag_search.py:579
msgid "Wir w√ºhlen uns durch die Dateien..."
msgstr ""

#: lemmatize_search/kir_tag_search.py:641
msgid ""
"\n"
"Statistics\n"
"characters               :{char:12}  ({odds} unreadable chars from bad "
"OCR)\n"
"tokens                   :{tokensbond:12}\n"
"tokens (when split by ') :{tokens_split:12}\n"
"types                    :{types:12}\n"
"recognized lemmata       :{lemmata:12}\n"
"unknown types            :{unk:15} %\n"
"used dictionary          :   {db_name}\n"
"short filename           :   {short_fn}"
msgstr ""

#: lemmatize_search/kir_tag_search.py:666
msgid "Preparing file ..."
msgstr ""

#: lemmatize_search/kir_tag_search.py:680
msgid ""
"Your file is older than our version of the Rundi dictionary.\n"
"Do you want to use your file or tag again the underlying text?\n"
"(maybe now there are less unknown words in your text)"
msgstr ""

#: lemmatize_search/kir_tag_search.py:700
msgid "There is already a tagged file: (made {good_old})"
msgstr ""

#: lemmatize_search/kir_tag_search.py:702
msgid ""
"\n"
"We use this instead of tagging again.\n"
msgstr ""

#: lemmatize_search/kir_tag_search.py:717
msgid "Sorry, can't use the file: {}"
msgstr ""

#: lemmatize_search/kir_tag_search.py:755
msgid ""
"\n"
"\n"
"Tagged file saved as: \n"
msgstr ""

#: lemmatize_search/kir_tag_search.py:757
msgid ""
"\n"
"We can use it again later."
msgstr ""

#: lemmatize_search/kir_tag_search.py:769
msgid ""
"Lemma-version of the text saved as:\n"
"\t"
msgstr ""

#: lemmatize_search/kir_tag_search.py:807
msgid "You searched this already"
msgstr ""

#: lemmatize_search/kir_tag_search.py:838
msgid ""
"All results are saved in file:\n"
"\t"
msgstr ""

#: lemmatize_search/kir_tag_search.py:846
msgid ""
"\n"
"No results for this query."
msgstr ""

#: lemmatize_search/kir_tag_search.py:861
msgid "Sorry, missing meta-data in csv-file"
msgstr ""

#: lemmatize_search/kir_tag_search.py:870
msgid "Sorry, wrong meta-data keys in your csv"
msgstr ""

#: lemmatize_search/kir_tag_search.py:884
msgid "Sorry, I can't read your csv-file as a tagged text."
msgstr ""

#: lemmatize_search/qt.py:45
msgid "Setti&ngs"
msgstr ""

#: lemmatize_search/qt.py:52
msgid "&Info"
msgstr ""

#: lemmatize_search/qt.py:60
msgid "&tag"
msgstr ""

#: lemmatize_search/qt.py:61
msgid "&search"
msgstr ""

#: lemmatize_search/qt.py:62
msgid "&download"
msgstr ""

#: lemmatize_search/qt.py:68
msgid "&Help Content"
msgstr ""

#: lemmatize_search/qt.py:69 lemmatize_search/qt.py:85
#: lemmatize_search/qt.py:101 lemmatize_search/qt.py:113
msgid "&About"
msgstr ""

#: lemmatize_search/qt.py:122
msgid "  How to"
msgstr ""

#: lemmatize_search/qt.py:126
msgid "  About this App"
msgstr ""

#: lemmatize_search/qt.py:161
msgid "Select the Rundi text you want to inspect:"
msgstr ""

#: lemmatize_search/qt.py:166
msgid "Select file"
msgstr ""

#: lemmatize_search/qt.py:187
msgid "only txt or csv"
msgstr ""

#: lemmatize_search/qt.py:196
msgid "Your search query:"
msgstr ""

#: tests/test_helper.py:29 tests/test_helper.py:36 tests/test_helper.py:50
msgid "Are you sure, that this is a tagged file?"
msgstr ""

